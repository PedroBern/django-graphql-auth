# this file is auto generated by the pre_docs_script.py

Register: |
    Register user with fields defined in the settings.

    If the email field of the user model is part of the
    registration fields (default), check if there is
    no user with that email or as a secondary email.

    If it exists, it does not register the user,
    even if the email field is not defined as unique
    (default of the default django user model).

    When creating the user, it also creates a `UserStatus`
    related to that user, making it possible to track
    if the user is archived, verified and has a secondary
    email.

    Send account verification email.

    If allowed to not verified users login, return token.
    
VerifyAccount: |
    Verify user account.

    Receive the token that was sent by email.
    If the token is valid, make the user verified
    by making the `user.status.verified` field true.
    
VerifySecondaryEmail: |
    Verify user secondary email.

    Receive the token that was sent by email.
    User is already verified when using this mutation.

    If the token is valid, add the secondary email
    to `user.status.secondary_email` field.

    Note that until the secondary email is verified,
    it has not been saved anywhere beyond the token,
    so it can still be used to create a new account.
    After being verified, it will no longer be available.
    
ResendActivationEmail: |
    Sends activation email.

    It is called resend because theoretically
    the first activation email was sent when
    the user registered.

    If there is no user with the requested email,
    a successful response is returned.
    
SendPasswordResetEmail: |
    Send password reset email.

    For non verified users, send an activation
    email instead.

    Accepts both primary and secondary email.

    If there is no user with the requested email,
    a successful response is returned.
    
PasswordReset: |
    Change user password without old password.

    Receive the token that was sent by email.

    If token and new passwords are valid, update
    user password and in case of using refresh
    tokens, revoke all of them.

    Also, if user has not been verified yet, verify it.
    
PasswordSet: |
    Set user password - for passwordless registration

    Receive the token that was sent by email.

    If token and new passwords are valid, set
    user password and in case of using refresh
    tokens, revoke all of them.

    Also, if user has not been verified yet, verify it.
    
ObtainJSONWebToken: |
    Obtain JSON web token for given user.

    Allow to perform login with different fields,
    and secondary email if set. The fields are
    defined on settings.

    Unlike other mutations, if the given credentials are invalid 
    or the user does not exist, a top-level GraphQL error will be
    returned to the client instead of an "errors"
    object within the data object.

    Not verified users can login by default. This
    can be changes on settings.

    If user is archived, make it unarchive and
    return `unarchiving=True` on output.
    
ArchiveAccount: |
    Archive account and revoke refresh tokens.

    User must be verified and confirm password.
    
DeleteAccount: |
    Delete account permanently or make `user.is_active=False`.

    The behavior is defined on settings.
    Anyway user refresh tokens are revoked.

    User must be verified and confirm password.
    
PasswordChange: |
    Change account password when user knows the old password.

    A new token and refresh token are sent. User must be verified.
    
UpdateAccount: |
    Update user model fields, defined on settings.

    User must be verified.
    
VerifyOrRefreshOrRevokeToken: |
    Same as `grapgql_jwt` implementation, with standard output.
    
SendSecondaryEmailActivation: |
    Send activation to secondary email.

    User must be verified and confirm password.
    
SwapEmails: |
    Swap between primary and secondary emails.

    Require password confirmation.
    
RemoveSecondaryEmail: |
    Remove user secondary email.

    Require password confirmation.
    